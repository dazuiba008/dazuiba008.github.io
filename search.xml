<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Installation from Source Code for postgreSQL]]></title>
    <url>%2F2018%2F09%2F18%2FInstallation-from-Source-Code-for-postgreSQL%2F</url>
    <content type="text"><![CDATA[其实学习pg有一段时间了，不过一直没有写相关的blog，以后这一块也会一起加进来，记录自己的学习过程。这里就先介绍下安装吧，pg安装还是很简单的，而且速度也快。1.和其他数据库安装一样，可以根据自己的需求，修改系统参数 /etc/sysctl.conf ,/etc/security/limits.conf,2.新建用户和组： #groupadd postgres #useradd -g postgres postgres3.创建相关目录： mkdir -p /database/pgdata/pg_root mkdir -p /opt/pgsql chown -R postgres:postgres /database/pgdata/pg_root 4.配置环境变量export PS1=”$USER@/bin/hostname -s-&gt; “export PGPORT=1921export PGDATA= /database/pgdata/pg_rootexport LANG=en_US.utf8export PGHOME=/opt/pgsqlexport LD_LIBRARY_PATH=$PGHOME/lib:/lib64:/usr/lib64:/usr/local/lib64:/lib:/usr/lib:/usr/local/libexport DATE=date +&quot;%Y%m%d%H%M&quot;export PATH=$PGHOME/bin:$PATH:.export MANPATH=$PGHOME/share/man:$MANPATHalias rm=’rm -i’alias ll=’ls -lh’根据自己需求自己修改5.解压安装包，可以安装了 ./configure –help这个可以查看一下对应的帮助，根据自己的环境，适当选用一些参数./configure –prefix=/opt/pgsql –with-pgport=1921 –with-segsize=8 –with-wal-segsize=64 –with-wal-blocksize=64 –with-perl –with-python –with-openssl –with-pam –with-ldap –with-libxml –with-libxslt –enable-thread-safety gmake worldgmake install-world安装完成以后su - postgresinitdb -D /database/pgdata/pg_root初始化以后，可以启动数据库了通过postgres -D 或者pg_ctl -D后面跟对应的安装路径就可以了。]]></content>
      <categories>
        <category>PostgreSQL</category>
      </categories>
      <tags>
        <tag>postgresql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Greenplum install]]></title>
    <url>%2F2018%2F09%2F18%2FGreenplum-install%2F</url>
    <content type="text"><![CDATA[架构：master主要建立与客户端的连接，收集segment的执行结果，不存放业务数据，可以一主一备segment业务数据存放处，执行master分发的SQL,一台机器可以配置多个segment，segment分primary和mirror 四台服务器搭建测试环境 192.168.101.115 master192.168.101.116 segment+standby192.168.100.217 segment192.168.100.225 segment 分辨配置一个primary，一个mirror对应后面参数路径，如果设置多个,空格分隔即可declare -a DATA_DIRECTORY=(/data01/gpadmin/gpdata/primary)declare -a MIRROR_DATA_DIRECTORY=(/data01/gpadmin/gpdata/mirror) 1.每台服务器/etc/hosts192.168.101.115 db-192-168-101-115.sky-mobi.com db-192-168-101-115192.168.101.116 db-192-168-101-116.sky-mobi.com db-192-168-101-116192.168.100.217 db-192-168-100-217.sky-mobi.com db-192-168-100-217192.168.100.225 db-192-168-100-225.sky-mobi.com db-192-168-100-225 2.配置/etc/sysctl.confkernel.shmmax = 500000000kernel.shmmni = 4096kernel.shmall = 4000000000kernel.sem = 250 512000 100 2048kernel.sysrq = 1kernel.core_uses_pid = 1kernel.msgmnb = 65536kernel.msgmax = 65536kernel.msgmni = 2048net.ipv4.tcp_syncookies = 1net.ipv4.conf.default.accept_source_route = 0net.ipv4.tcp_tw_recycle = 1net.ipv4.tcp_max_syn_backlog = 4096net.ipv4.conf.all.arp_filter = 1net.ipv4.ip_local_port_range = 10000 65535net.core.netdev_max_backlog = 10000net.core.rmem_max = 2097152net.core.wmem_max = 2097152vm.overcommit_memory = 2 3.配置/etc/security/limits.conf soft nofile 65536 hard nofile 65536 soft nproc 131072 hard nproc 131072 修改磁盘调度策略echo deadline &gt; /sys/block/sba/queue/scheduler 5.执行安装程序useradd gpadminpasswd gpadminunzip greenplum-db-4.3.12.0-rhel5-x86_64.zip./greenplum-db-4.3.12.0-rhel5-x86_64.bin默认安装在/usr/local下 7.chown -R gpadmin.gpadmin /usr/local/greenplum-db8.配置gpadmin环境变量，添加以下source /usr/local/greenplum-db/greenplum_path.shexport MASTER_DATA_DIRECTORY=/data01/gpadmin/gpdata/master/gpseg-1export PGPORT=1922export PS1=”$USER@/bin/hostname -s-&gt; “ 9.新建两个文件hostlist, seg_hostshostlistdb-192-168-101-115db-192-168-101-116db-192-168-100-217db-192-168-100-225 seg_hostsdb-192-168-101-116db-192-168-100-217db-192-168-100-225 10.使用gpssh-exkeys打通所有服务器的透明登陆gpssh-exkeys -f hostlistgpssh -f hostlist ls //批量执行命令 11.打包安装好的目录，并复制到其他节点，解压tar -cf gp.tar /use/local/greenplum-db-4.3.12.0/gpscp -f hostlist gp.tar =:/home/gpmadin //批量服务到每个节点tar -xf gp.tar //解压 12.建立相关数据目录赋予权限mkdir -p /data01/gpadmin/gpdata/mastermkdir -p /data01/gpadmin/gpdata/primarymkdir -p /data01/gpadmin/gpdata/mirrorchown -R gpadmin.gpadmin /data01/gpadmin/gpdata/master /data01/gpadmin/gpdata/primary /data01/gpadmin/gpdata/mirror 13.初始化Greenplum复制配置文件到自己的目录cp /usr/local/greenplum-db/docs/cli_help/gpconfigs/gpinitsystem_config /home/gpadmin/ 修改后的相关参数ARRAY_NAME=”SKY Greenplum DW”SEG_PREFIX=gpsegPORT_BASE=40000declare -a DATA_DIRECTORY=(/data01/gpadmin/gpdata/primary)MASTER_HOSTNAME=db-192-168-101-115MASTER_DIRECTORY=/data01/gpadmin/gpdata/masterMASTER_PORT=1922TRUSTED_SHELL=sshCHECK_POINT_SEGMENTS=8ENCODING=UTF-8MIRROR_PORT_BASE=50000REPLICATION_PORT_BASE=41000MIRROR_REPLICATION_PORT_BASE=51000declare -a MIRROR_DATA_DIRECTORY=(/data01/gpadmin/gpdata/mirror)MACHINE_LIST_FILE=/home/gpadmin/seg_hosts 初始化GPgpinitsystem -c /home/gpadmin/gpinitsystem_config -s db-192-168-101-116 数据库可以正常连接：psql -d postgrespsql (8.2.15)Type “help” for help. postgres=# \l List of databases Name | Owner | Encoding | Access privileges———–+———+———-+———————— hank | gpadmin | UTF8 | =Tc/gpadmin : gpadmin=CTc/gpadmin : hank=CTc/gpadmin postgres | gpadmin | UTF8 | template0 | gpadmin | UTF8 | =c/gpadmin : gpadmin=CTc/gpadmin template1 | gpadmin | UTF8 | =c/gpadmin : gpadmin=CTc/gpadmin 关闭与启动： gpstart -a 启动 gpstop -a 关闭 gpstop -r 重启 gpstop -u 重载配置参数 gpstart -m 单用户维护模式启动 PGOPTIONS=’-c gp_session_role=utility’ psql gpstate 查看GP状态 参考：http://gpdb.docs.pivotal.io/43120/install_guide/prep_os_install_gpdb.html]]></content>
      <categories>
        <category>Greenplum</category>
      </categories>
      <tags>
        <tag>Greenplum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mongodb replica sets reconfig and conver a Secondary to an Arbiter]]></title>
    <url>%2F2013%2F04%2F22%2Fmongodb-replica-sets-reconfig-and-conver-a-Secondary-to-an-Arbiter%2F</url>
    <content type="text"><![CDATA[replica set由于需求可能会调整节点的优先级，或者仲裁节点那么先看一下语法：rs.reconfig(configuration[, force])Parameters:configuration – A document that specifies the configuration of a replica set.force – Optional. Specify { force: true } as the force parameter to force the replica set to accept the new configuration even if a majority of the members are not accessible. Use with caution, as this can lead to rollback situations.Initializes a new replica set configuration. This function will disconnect the shell briefly and forces a reconnection as the replica set renegotiates which node will be primary. As a result, the shell will display an error even if this command succeeds. rs.reconfig() provides a wrapper around the “replSetReconfig” database command. rs.reconfig() overwrites the existing replica set configuration. Retrieve the current configuration object with rs.conf(), modify the configuration as needed and then use rs.reconfig() to submit the modified configuration object. To reconfigure a replica set, use the following sequence of operations: conf = rs.conf() // modify conf to change configuration rs.reconfig(conf)If you want to force the reconfiguration if a majority of the set isn’t connected to the current member, or you’re issuing the command against a secondary, use the following form: conf = rs.conf() // modify conf to change configuration rs.reconfig(conf, { force: true } )Warning Forcing a rs.reconfig() can lead to rollback situations and other difficult to recover from situations. Exercise caution when using this option.这里遇到rollback情况，可能会导致fatal状态，那么replica set就等于失效了，可以拷贝local数据文件，或者所有数据文件进行重建举例：var c = rs.conf();c.members[2].priority = 0; 0~100数字越大优先级越高，0不会被切换为primary节点，这里也可以写成包含小数的值rs.reconfig(c);配置完以后，可以通过一下命令查看一下配置是否修改好：rs.conf()rs.status()为了防止脑裂，可以加入仲裁节点，使用以下命令：rs.addArb(“:&lt;:port&gt;”); ==rs.add(hostspec, arbiterOnly)示例：rs.add(‘mongodb3.example.net:27017’, true)当然将一个从节点转换为仲裁节点：(1)首先关闭从节点(2)rs.remove(“&lt;:port&gt;”)删除该从节点，rs.conf()验证一下(3)创建新的数据目录，因为仲裁节点是不存放生产数据的(4)通过rs.addArb(“:&lt;:port&gt;”)加入，rs.conf()验证一下那么就可以看到：仲裁节点的属性为”arbiterOnly” : true{ “_id” : “xxx”, “version” : 14, “members” : [ { “_id” : 1, “host” : “xxx.xxx.xxx.xxx:5281” }, { “_id” : 2, “host” : “ xxx.xxx.xxx.xxx :5281”, “arbiterOnly” : true }, { “_id” : 3, “host” : “ xxx.xxx.xxx.xxx :5281” } ]}]]></content>
      <categories>
        <category>mongodb</category>
      </categories>
      <tags>
        <tag>mongodb</tag>
      </tags>
  </entry>
</search>
